name: FastAPI VRM Viewer CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create necessary directories
      run: |
        mkdir -p uploads
        mkdir -p uploads/backgrounds
        mkdir -p static/uploads
        mkdir -p static/uploads/backgrounds
    
    - name: Initialize database for testing
      run: |
        python init_fresh_db.py
    
    - name: Run syntax check
      run: |
        python -m py_compile main.py
        python -m py_compile auth.py
        python -m py_compile crud.py
        python -m py_compile models.py
        python -m py_compile database.py
        python -m py_compile schemas.py
    
    - name: Test application startup
      run: |
        timeout 30s python main.py &
        sleep 10
        curl -f http://localhost:8001/hello || exit 1
      
    - name: Run quick tests
      run: |
        timeout 30s python main.py &
        sleep 10
        python quick_test.py

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -x test_*,*_test.py
    
    - name: Check for known security vulnerabilities
      run: |
        pip install -r requirements.txt
        safety check

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install code quality tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check import sorting
      run: |
        isort . --check-only --diff
    
    - name: Check code formatting
      run: |
        black . --check --diff
